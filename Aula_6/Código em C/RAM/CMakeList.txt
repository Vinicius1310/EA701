# Generated Cmake Pico project file

cmake_minimum_required(VERSION 3.13)

set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Initialise pico_sdk from installed location
# (note this can come from environment, CMake cache etc)

# == DO NOT EDIT THE FOLLOWING LINES for the Raspberry Pi Pico VS Code Extension to work ==
if(WIN32)
    set(USERHOME $ENV{USERPROFILE})
else()
    set(USERHOME $ENV{HOME})
endif()
set(sdkVersion 2.2.0)
set(toolchainVersion 14_2_Rel1)
set(picotoolVersion 2.2.0)
set(picoVscode ${USERHOME}/.pico-sdk/cmake/pico-vscode.cmake)
if (EXISTS ${picoVscode})
    include(${picoVscode})
endif()
# ====================================================================================
set(PICO_BOARD pico CACHE STRING "Board type")

# Pull in Raspberry Pi Pico SDK (must be before project)
include(pico_sdk_import.cmake)

project(Experimento_6_v1 C CXX ASM)

# Initialise the Raspberry Pi Pico SDK
pico_sdk_init()

# Add executable. Default name is the project name, version 0.1
add_executable(Experimento_6_v1
    Experimento_6_v1.c
    ssd1306/ssd1306.c         # <- ADICIONADO: driver do display
)

pico_set_program_name(Experimento_6_v1 "Experimento_6_v1")
pico_set_program_version(Experimento_6_v1 "0.1")

# Modify the below lines to enable/disable output over UART/USB
pico_enable_stdio_uart(Experimento_6_v1 0)
pico_enable_stdio_usb(Experimento_6_v1 1)  # <- USB ativado (para debug printf)

# Add the standard library to the build
target_link_libraries(Experimento_6_v1
    pico_stdlib
    hardware_i2c              # <- ADICIONADO: biblioteca I2C
)

# Add the standard include files to the build
target_include_directories(Experimento_6_v1 PRIVATE
    ${CMAKE_CURRENT_LIST_DIR}
    ${CMAKE_CURRENT_LIST_DIR}/ssd1306   # <- ADICIONADO: headers do display
)

pico_add_extra_outputs(Experimento_6_v1)
